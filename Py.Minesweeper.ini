import pygame
import random

# Инициализация Pygame
pygame.init()

# Настройки игры
WIDTH, HEIGHT = 400, 400
GRID_SIZE = 10
CELL_SIZE = WIDTH // GRID_SIZE
FPS = 60

# Цвета
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GRAY = (192, 192, 192)
RED = (255, 0, 0)
GREEN = (0, 255, 0)

class Minesweeper:
    def __init__(self):
        self.screen = pygame.display.set_mode((WIDTH, HEIGHT))
        pygame.display.set_caption('Minesweeper')
        self.clock = pygame.time.Clock()
        self.font = pygame.font.SysFont('Arial', 24, bold=True)
        self.reset()

    def reset(self):
        self.grid = [[0 for _ in range(GRID_SIZE)] for _ in range(GRID_SIZE)]
        self.revealed = [[False for _ in range(GRID_SIZE)] for _ in range(GRID_SIZE)]
        self.flagged = [[False for _ in range(GRID_SIZE)] for _ in range(GRID_SIZE)]
        self.game_over = False
        self.win = False
        self.place_mines()
        self.calculate_numbers()

    def place_mines(self):
        mines_placed = 0
        while mines_placed < GRID_SIZE:
            x = random.randint(0, GRID_SIZE - 1)
            y = random.randint(0, GRID_SIZE - 1)
            if self.grid[y][x] != -1:
                self.grid[y][x] = -1
                mines_placed += 1

    def calculate_numbers(self):
        for y in range(GRID_SIZE):
            for x in range(GRID_SIZE):
                if self.grid[y][x] == -1:
                    continue
                total = 0
                for dy in [-1, 0, 1]:
                    for dx in [-1, 0, 1]:
                        if dy == 0 and dx == 0:
                            continue
                        ny, nx = y + dy, x + dx
                        if 0 <= ny < GRID_SIZE and 0 <= nx < GRID_SIZE:
                            if self.grid[ny][nx] == -1:
                                total += 1
                self.grid[y][x] = total

    def draw(self):
        self.screen.fill(GRAY)
        for y in range(GRID_SIZE):
            for x in range(GRID_SIZE):
                rect = pygame.Rect(x*CELL_SIZE, y*CELL_SIZE, CELL_SIZE, CELL_SIZE)
                if self.revealed[y][x]:
                    if self.grid[y][x] == -1:
                        pygame.draw.rect(self.screen, RED, rect)
                    else:
                        pygame.draw.rect(self.screen, WHITE, rect)
                        if self.grid[y][x] > 0:
                            text = self.font.render(str(self.grid[y][x]), True, BLACK)
                            self.screen.blit(text, (x*CELL_SIZE + 10, y*CELL_SIZE + 5))
                else:
                    pygame.draw.rect(self.screen, BLACK, rect)
                    if self.flagged[y][x]:
                        text = self.font.render('F', True, GREEN)
                        self.screen.blit(text, (x*CELL_SIZE + 10, y*CELL_SIZE + 5))
                pygame.draw.rect(self.screen, WHITE, rect, 1)

    def reveal(self, x, y):
        if not (0 <= x < GRID_SIZE and 0 <= y < GRID_SIZE):
            return
        if self.revealed[y][x] or self.flagged[y][x]:
            return
        self.revealed[y][x] = True
        if self.grid[y][x] == -1:
            self.game_over = True
        elif self.grid[y][x] == 0:
            for dy in [-1, 0, 1]:
                for dx in [-1, 0, 1]:
                    self.reveal(x + dx, y + dy)

    def check_win(self):
        for y in range(GRID_SIZE):
            for x in range(GRID_SIZE):
                if self.grid[y][x] != -1 and not self.revealed[y][x]:
                    return False
        return True

    def run(self):
        while True:
            self.clock.tick(FPS)
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    exit()
                elif event.type == pygame.MOUSEBUTTONDOWN and not self.game_over and not self.win:
                    x, y = pygame.mouse.get_pos()
                    x //= CELL_SIZE
                    y //= CELL_SIZE
                    if event.button == 1:  # ЛКМ
                        self.reveal(x, y)
                        if self.grid[y][x] == -1:
                            self.game_over = True
                    elif event.button == 3:  # ПКМ
                        if not self.revealed[y][x]:
                            self.flagged[y][x] = not self.flagged[y][x]

            if self.check_win():
                self.win = True

            self.draw()
            if self.game_over:
                text = self.font.render('Game Over!', True, RED)
                self.screen.blit(text, (WIDTH//2 - 70, HEIGHT//2 - 20))
            elif self.win:
                text = self.font.render('You Win!', True, GREEN)
                self.screen.blit(text, (WIDTH//2 - 60, HEIGHT//2 - 20))
            pygame.display.update()

if __name__ == '__main__':
    game = Minesweeper()
    game.run()
